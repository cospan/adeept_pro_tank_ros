<?xml version="1.0"?>
<robot
  xmlns:xi         = "http://www.w3.org/2001/XInclude"
  xmlns:xacro      = "http://www.ros.org/wiki/xacro"
 	xmlns:sensor     = "http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
  xmlns:controller = "http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:interface  = "http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
	name="adeept_rpi_pro">


  <!-- Constants for robot dimensions -->
  <xacro:property name="SCALE"                value="0.001"              />

  <!-- <xacro:property name="spacing"        value="${0 * SCALE}"      /> -->
  <xacro:property name="spacing"              value="${20 * SCALE}"      />

  <xacro:property name="chassis_mass"         value="${1.324 * SCALE}"  /> <!-- Actually full weight of the robot -->
  <xacro:property name="chassis_zlen"       	value="${55 * SCALE}"     /> <!-- 55 mm -->
  <xacro:property name="chassis_offset"       value="${13 * SCALE}"     /> <!-- 13 mm off the ground-->
  <xacro:property name="chassis_ylen"       	value="${170 * SCALE}"    />
  <xacro:property name="chassis_xlen"        	value="${75 * SCALE}"     />

  <xacro:property name="chassis_inertia_xx"   value="${chassis_mass/12.0 * ((chassis_zlen * chassis_zlen) + (chassis_xlen * chassis_xlen))}" />
  <xacro:property name="chassis_inertia_yy"   value="${chassis_mass/12.0 * ((chassis_zlen * chassis_zlen) + (chassis_ylen * chassis_ylen))}" />
  <xacro:property name="chassis_inertia_zz"   value="${chassis_mass/12.0 * ((chassis_xlen * chassis_xlen) + (chassis_ylen * chassis_ylen))}" />

  <xacro:property name="track_mass"           value="${0.200 * SCALE}"  />
  <xacro:property name="track_pad"            value="${10 * SCALE}"     />
  <xacro:property name="track_xlen"          	value="${42 * SCALE}"     />
  <xacro:property name="track_zlen"         	value="${60 * SCALE}"     />
  <xacro:property name="track_ylen"         	value="${chassis_ylen}"   /> <!-- Visually Align this with the chassis -->
  <!-- <xacro:property name="track_ylen" value="170"   /> -->

  <xacro:property name ="wheel_inertia"       value="${SCALE * 1e-3}" />
  <xacro:property name ="wheel_kp"            value="1000000.0"       />
  <xacro:property name ="wheel_kd"            value="100.0"           />
  <xacro:property name ="wheel_mu1"           value="1"               />
  <xacro:property name ="wheel_mu2"           value="1"               />
  <xacro:property name ="wheel_slip1"         value="0.5"             />
  <xacro:property name ="wheel_slip2"         value="0"               />


  <xacro:property name ="arm_chassis_b_jlen" value="${30 * SCALE}"    />
  <xacro:property name ="arm_chassis_b_off"  value="${0 * SCALE}"     />

  <xacro:property name ="arm_b_mass"         value="${0.1 * SCALE}"   />
  <xacro:property name ="arm_b_xlen"         value="${ 72 * SCALE}"   />
  <xacro:property name ="arm_b_ylen"         value="${ 93 * SCALE}"   />
  <xacro:property name ="arm_b_zlen"         value="${ 62 * SCALE}"   />
  <xacro:property name ="arm_b_inertia_xx"   value="${arm_b_mass/12.0 * ((arm_b_zlen * arm_b_zlen) + (arm_b_xlen * arm_b_xlen))}" />
  <xacro:property name ="arm_b_inertia_yy"   value="${arm_b_mass/12.0 * ((arm_b_zlen * arm_b_zlen) + (arm_b_ylen * arm_b_ylen))}" />
  <xacro:property name ="arm_b_inertia_zz"   value="${arm_b_mass/12.0 * ((arm_b_xlen * arm_b_xlen) + (arm_b_ylen * arm_b_ylen))}" />


  <xacro:property name = "arm_b_l1_jlen"      value="${ 30 * SCALE}"    />
  <xacro:property name = "arm_b_l1_xoff"      value="${  0 * SCALE}"    />
  <xacro:property name = "arm_b_l1_yoff"      value="${-40 * SCALE}"    />
  <xacro:property name = "arm_b_l1_zoff"      value="${  0 * SCALE}"    />

  <!-- L1: mast -->
  <xacro:property name = "arm_l1_mass"        value="${0.05 * SCALE}"  />
  <xacro:property name = "arm_l1_xlen"        value="${40 * SCALE}"    />
  <xacro:property name = "arm_l1_ylen"        value="${40 * SCALE}"    />
  <xacro:property name = "arm_l1_zlen"        value="${80 * SCALE}"    />
  <xacro:property name = "arm_l1_inertia_xx"  value="${arm_l1_mass/12.0 * ((arm_l1_zlen * arm_l1_zlen) + (arm_l1_xlen * arm_l1_xlen))}" />
  <xacro:property name = "arm_l1_inertia_yy"  value="${arm_l1_mass/12.0 * ((arm_l1_zlen * arm_l1_zlen) + (arm_l1_ylen * arm_l1_ylen))}" />
  <xacro:property name = "arm_l1_inertia_zz"  value="${arm_l1_mass/12.0 * ((arm_l1_xlen * arm_l1_xlen) + (arm_l1_ylen * arm_l1_ylen))}" />

  <xacro:property name = "arm_l1_effort"      value="300"               />
  <xacro:property name = "arm_l1_velocity"    value="1"                 />
  <xacro:property name = "arm_l1_lower_limit" value="${-pi/2}"          />
  <xacro:property name = "arm_l1_upper_limit" value="${ pi/2}"          />
  <xacro:property name = "arm_l1_damping"     value="0.1"               />
  <xacro:property name = "arm_l1_friction"    value="1.0"               />


  <xacro:property name = "arm_l1_l2_jlen"     value="${70 * SCALE}"    />
  <!-- From End of L1 -->
  <xacro:property name = "arm_l1_l2_off"      value="${-5 * SCALE}"    />

  <xacro:property name = "arm_l2_mass"        value="${0.05 * SCALE}"  />
  <xacro:property name = "arm_l2_xlen"        value="${55 * SCALE}"    />
  <xacro:property name = "arm_l2_zlen"        value="${30 * SCALE}"    />
  <xacro:property name = "arm_l2_ylen"        value="${145 * SCALE}"   />

  <xacro:property name = "arm_l2_ee_jlen"     value="${122 * SCALE}"   />
  <!-- From End of L2 -->
  <xacro:property name = "arm_l2_ee_off"      value="${0 * SCALE}"     />

  <xacro:property name = "arm_ee_mass"        value="${0.05 * SCALE}"  />
  <xacro:property name = "arm_ee_xlen"        value="${40 * SCALE}"    />
  <xacro:property name = "arm_ee_zlen"        value="${40 * SCALE}"    />
  <xacro:property name = "arm_ee_ylen"        value="${112 * SCALE}"   />









  <xacro:property name="chassis_z_center"  value="${chassis_offset + (chassis_zlen / 2)}"/> <!-- 55 mm -->
  <xacro:property name="track_z_center" value="${track_zlen / 2}"/> <!-- 55 mm -->

  <!-- Import Rviz colors -->
  <xacro:include filename="$(find adeept_pro_tank_ros)/urdf/materials.xacro" />


  <link name="robot_footprint"/>

  <joint name="robot_footprint_joint" type="fixed">
    <!-- <origin xyz="0 0 ${chassis_z_center}" rpy="0 0 0"/> -->
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="robot_footprint"/>
    <child link="chassis"/>
  </joint>

  <link name='chassis'>
    <inertial>
      <origin xyz="0 0 ${chassis_z_center}" rpy="0 0 0"/>
      <mass value="${chassis_mass}"/>
      <inertia
          ixx="${chassis_inertia_xx}" ixy="0"         ixz="0"
          iyy="${chassis_inertia_yy}" iyz="0"
          izz="${chassis_inertia_zz}"
          />
    </inertial>
    <collision name='chassis_collision'>
      <origin xyz="0 0 ${chassis_z_center}" rpy="0 0 0"/>
      <geometry>
        <!-- <box size="${chassis_xlen} ${chassis_ylen} ${chassis_zlen}"/> -->
        <box size="${chassis_xlen - spacing} ${chassis_ylen} ${chassis_zlen}"/>
      </geometry>
    </collision>
    <visual name='chassis_visual'>
      <origin xyz="0 0 ${chassis_z_center}" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_xlen} ${chassis_ylen} ${chassis_zlen}"/>
      </geometry>
    </visual>
    <self_collide>0</self_collide>
  </link>

  <joint name='left_track_joint' type='fixed'>
    <parent link="chassis"/>
    <child link="left_track"/>
    <origin xyz="${(chassis_xlen / 2) + (track_xlen / 2)} 0 ${track_z_center}" rpy="0 0 0"/>
    <axis xyz = "0 1 0"/>
  </joint>

  <link name='left_track'>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${track_mass}"/>
      <inertia
        ixx="0" ixy="0"         ixz="0"
        iyy="0" iyz="0"
        izz="0"
        />
    </inertial>

    <visual name='visual'>
      <!-- <origin xyz="${(chassis_xlen / 2) + (track_xlen  / 2)} ${track_ylen / 2} 0" rpy="0 0 0"/>-->
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${track_xlen} ${track_ylen} ${track_zlen}"/>
      </geometry>
    </visual>
    <!-- Just for show now
    <collision name='collision'>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${track_xlen} ${track_ylen} ${track_zlen}"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0.7</mu>
            <mu2>150</mu2>
            <fdir1>0 1 0</fdir1>
          </ode>
        </friction>
      </surface>
    </collision>
    -->


    <self_collide>0</self_collide>
  </link>




  <joint name='left_track_fwheel_jnt' type='continuous'>
    <parent link="left_track"/>
    <child link="left_track_fwheel"/>
    <origin xyz="0 ${track_ylen / 2} 0" rpy="0 0 0"/>
    <axis xyz = "1 0 0"/>
    <!-- <axis xyz="0 1 0" rpy="0 0 0"/> -->
    <limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>

  <link name='left_track_fwheel'>
    <inertial>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <mass value="${track_mass}"/>
      <inertia
          ixx="${wheel_inertia}" ixy="0" ixz="0"
          iyy="${wheel_inertia}" iyz="0"
          izz="${wheel_inertia}"
          />
    </inertial>
    <visual name='visual'>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <geometry>
        <cylinder length="${track_xlen}" radius="${track_zlen / 2}"/>
      </geometry>
    </visual>
    <collision name='collision'>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <geometry>
        <cylinder length="${track_xlen}" radius="${track_zlen / 2}"/>
      </geometry>
      <surface>
        <friction>
          <!-- <fdir1>0 1 0</fdir1> -->
          <fdir1>1 0 0</fdir1>
          <kp>${wheel_kp}</kp> <!-- kp and kd for rubber -->
          <kd>${wheel_kd}</kd>
          <mu>${wheel_mu1}</mu>
          <mu2>${wheel_mu2}</mu2>
          <slip1>${wheel_slip1}</slip1>
          <slip2>${wheel_slip2}</slip2>
        </friction>
      </surface>
    </collision>
    <self_collide>0</self_collide>
  </link>


  <joint name='left_track_rwheel_jnt' type='continuous'>
    <parent link="left_track"/>
    <child link="left_track_rwheel"/>
    <origin xyz="0 ${-(track_ylen / 2)} 0" rpy="0 0 0"/>
    <axis xyz = "1 0 0"/>
    <!-- <axis xyz="0 1 0" rpy="0 0 0"/> -->
    <limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>

  <link name="left_track_rwheel">
    <inertial>
      <mass value="${track_mass}"/>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/> -->
      <inertia
          ixx="${wheel_inertia}" ixy="0" ixz="0"
          iyy="${wheel_inertia}" iyz="0"
          izz="${wheel_inertia}"
          />
    </inertial>
    <visual name='visual'>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/> -->
      <geometry>
        <cylinder length="${track_xlen}" radius="${track_zlen / 2}"/>
      </geometry>
    </visual>
    <collision name='collision'>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/> -->
      <geometry>
        <cylinder length="${track_xlen}" radius="${track_zlen / 2}"/>
      </geometry>
      <surface>
        <friction>
          <!-- <fdir1>0 1 0</fdir1> -->
          <fdir1>0 1 0</fdir1>
          <kp>${wheel_kp}</kp> <!-- kp and kd for rubber -->
          <kd>${wheel_kd}</kd>
          <mu>${wheel_mu1}</mu>
          <mu2>${wheel_mu2}</mu2>
          <slip1>${wheel_slip1}</slip1>
          <slip2>${wheel_slip2}</slip2>
        </friction>
      </surface>
    </collision>
    <self_collide>0</self_collide>
  </link>


  <joint name='right_track_joint' type='fixed'>
    <parent link="chassis"/>
    <child link="right_track"/>
    <origin xyz="${-((chassis_xlen / 2) + (track_xlen / 2))} 0 ${track_z_center}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <link name='right_track'>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${track_mass}"/>
      <inertia
          ixx="${track_mass / 12.0 * (track_xlen * track_xlen   + track_ylen * track_ylen)}" ixy="0"         ixz="0"
          iyy="${track_mass / 12.0 * (track_xlen * track_xlen   + track_zlen * track_zlen)}" iyz="0"
          izz="${track_mass / 12.0 * (track_zlen * track_zlen + track_ylen * track_ylen)}"
          />
    </inertial>

    <visual name='visual'>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${track_xlen} ${track_ylen} ${track_zlen}"/>
      </geometry>
    </visual>
    <!-- Just for show right now
    <collision name='collision'>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${track_xlen} ${track_ylen} ${track_zlen}"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0.7</mu>
            <mu2>150</mu2>
            <fdir1>0 1 0</fdir1>
          </ode>
        </friction>
      </surface>
    </collision>
    -->
    <self_collide>0</self_collide>
  </link>


  <joint name='right_track_fwheel_jnt' type='continuous'>
    <parent link="right_track"/>
    <child link="right_track_fwheel"/>
    <origin xyz="0 ${track_ylen / 2} 0" rpy="0 0 0"/>
    <axis xyz = "1 0 0"/>
    <!-- <axis xyz="0 1 0" rpy="0 0 0"/> -->
    <limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>


  <link name='right_track_fwheel'>
    <inertial>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <mass value="${track_mass}"/>
      <inertia
          ixx="${wheel_inertia}" ixy="0" ixz="0"
          iyy="${wheel_inertia}" iyz="0"
          izz="${wheel_inertia}"
          />
    </inertial>
    <visual name='visual'>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <geometry>
        <cylinder length="${track_xlen}" radius="${track_zlen / 2}"/>
      </geometry>
    </visual>
    <collision name='collision'>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <geometry>
        <cylinder length="${track_xlen}" radius="${track_zlen / 2}"/>
      </geometry>
      <surface>
        <friction>
          <!-- <fdir1>0 1 0</fdir1> -->
          <fdir1>1 0 0</fdir1>
          <kp>${wheel_kp}</kp> <!-- kp and kd for rubber -->
          <kd>${wheel_kd}</kd>
          <mu>${wheel_mu1}</mu>
          <mu2>${wheel_mu2}</mu2>
          <slip1>${wheel_slip1}</slip1>
          <slip2>${wheel_slip2}</slip2>
        </friction>
      </surface>
    </collision>
    <self_collide>0</self_collide>
  </link>


  <joint name='right_track_rwheel_jnt' type='continuous'>
    <parent link="right_track"/>
    <child link="right_track_rwheel"/>
    <origin xyz="0 ${-(track_ylen / 2)} 0" rpy="0 0 0"/>
    <axis xyz = "1 0 0"/>
    <!-- <axis xyz="0 1 0" rpy="0 0 0"/> -->
    <limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>

  <link name="right_track_rwheel">
    <inertial>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <mass value="${track_mass}"/>
      <inertia
          ixx="${wheel_inertia}" ixy="0" ixz="0"
          iyy="${wheel_inertia}" iyz="0"
          izz="${wheel_inertia}"
          />
    </inertial>
    <visual name='visual'>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <geometry>
        <cylinder length="${track_xlen}" radius="${track_zlen / 2}"/>
      </geometry>
    </visual>
    <collision name='collision'>
      <origin xyz="0 0 0" rpy="0 1.5707 0"/>
      <!-- <origin xyz="0.0 0 0" rpy=" 0 1.5707 1.5707"/> -->
      <geometry>
        <cylinder length="${track_xlen}" radius="${track_zlen / 2}"/>
      </geometry>
      <surface>
        <friction>
          <!-- <fdir1>0 1 0</fdir1> -->
          <fdir1>1 0 0</fdir1>
          <kp>${wheel_kp}</kp> <!-- kp and kd for rubber -->
          <kd>${wheel_kd}</kd>
          <mu>${wheel_mu1}</mu>
          <mu2>${wheel_mu2}</mu2>
          <slip1>${wheel_slip1}</slip1>
          <slip2>${wheel_slip2}</slip2>
        </friction>
      </surface>
    </collision>
    <self_collide>0</self_collide>
  </link>


  <!-- ARM -->
  <joint name="arm_base_joint" type="fixed">
    <!-- <origin xyz="0 0 ${chassis_zlen / 2}" rpy="0 0 0"/> -->
    <origin xyz="0 0 ${chassis_zlen}" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child  link="arm_base"/>
  </joint>

  <link name='arm_base'>
    <inertial>
      <mass value="${arm_b_mass}"/>
      <origin xyz="0 0 ${arm_b_zlen / 2}" rpy="0 0 0"/>
      <!-- <origin xyz="${arm_b_l1_xoff} ${arm_b_l1_yoff} ${arm_b_ylen / 2}" rpy="0 0 0"/> -->
      <inertia
          ixx="${arm_b_inertia_xx}" ixy="0"         ixz="0"
          iyy="${arm_b_inertia_yy}" iyz="0"
          izz="${arm_b_inertia_zz}"
          />
    </inertial>
    <visual>
      <origin xyz="0 0 ${arm_b_zlen / 2}" rpy="0 0 0"/>
      <geometry>
        <box size="${arm_b_xlen} ${arm_b_ylen} ${arm_b_zlen}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 ${arm_b_zlen / 2}" rpy="0 0 0"/>
      <geometry>
        <box size="${arm_b_xlen} ${arm_b_ylen} ${arm_b_zlen}"/>
      </geometry>
    </collision>
    <self_collide>0</self_collide>
  </link>


  <joint name="arm_b_l1_joint" type="revolute">
    <parent link="arm_base"/>
    <child  link="arm_l1"/>
    <origin xyz="${arm_b_l1_xoff} ${arm_b_l1_yoff} ${arm_b_zlen + arm_b_l1_zoff}" rpy="0 0 0"/>
    <axis xyz = "0 0 1"/>
    <limit effort="${arm_l1_effort}" velocity="${arm_l1_velocity}" lower="${arm_l1_lower_limit}" upper="${arm_l1_upper_limit}"/>
    <dynamics damping="${arm_l1_damping}" friction="${arm_l1_friction}"/>
  </joint>

  <link name='arm_l1'>
    <inertial>
      <mass value="${arm_l1_mass}"/>
      <origin xyz="0 0 ${(arm_l1_zlen / 2)}" rpy="0 0 0"/>
      <inertia
          ixx="${arm_l1_inertia_xx}" ixy="0"         ixz="0"
          iyy="${arm_l1_inertia_yy}" iyz="0"
          izz="${arm_l1_inertia_zz}"
          />
    </inertial>
    <visual>
      <origin xyz="0 0 ${(arm_l1_zlen / 2)}" rpy="0 0 0"/>
      <geometry>
        <box size="${arm_l1_xlen} ${arm_l1_ylen} ${arm_l1_zlen}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 ${(arm_l1_zlen / 2)}" rpy="0 0 0"/>
      <geometry>
        <box size="${arm_l1_xlen} ${arm_l1_ylen} ${arm_l1_zlen}"/>
      </geometry>
    </collision>
    <self_collide>0</self_collide>
  </link>

  <transmission name="arm_l1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_b_l1_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="arm_l1_actuator">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace>/adeept_rpi_pro</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
		</plugin>
	</gazebo>

  <!--
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>100.0</updateRate>
			<robotNamespace>/adeept_rpi_pro</robotNamespace>
      <leftFrontJoint>left_track_fwheel_jnt</leftFrontJoint>
      <rightFrontJoint>right_track_fwheel_jnt</rightFrontJoint>
      <leftRearJoint>left_track_rwheel_jnt</leftRearJoint>
      <rightRearJoint>right_track_rwheel_jnt</rightRearJoint>
      <wheelSeparation>0.75</wheelSeparation>
      <wheelDiameter>0.060</wheelDiameter>
      <robotBaseFrame>robot_footprint</robotBaseFrame>
      <torque>200</torque>
      <MaxForce>5.0</MaxForce>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <broadcastTF>true</broadcastTF>
      <covariance_x>0.001</covariance_x>
      <covariance_y>0.001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
    </plugin>
  </gazebo>
  -->

  <gazebo reference="chassis">
    <material>Gazebo/Green</material>
  </gazebo>

  <gazebo reference="left_track">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="right_track">
    <material>Gazebo/Black</material>
  </gazebo>






</robot>
