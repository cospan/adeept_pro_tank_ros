<?xml version="1.0" ?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- <param name="robot_description" command="$(find xacro)/xacro $(arg model)" /> -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find adeept_pro_tank_ros)/urdf/adeept_rpi_pro.xacro'" />

  <!-- Send fake joint values-->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     <param name="use_gui" value="true"/>
  </node>

  <!-- Send robot states to tf -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find adeept_pro_tank_ros)/worlds/adeept_rpi_pro_simple.world"/>
    <!-- <arg name="world_name" value="$(find adeept_pro_tank_ros)/worlds/cafe.world"/>-->

    <!--<arg name="world_name" value="$(find skid_steer_bot)/worlds/jackal_race.world"/>  -->
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)" />
  </include>


  <!-- Load the URDF into the ROS Parameter Server -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!--
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -file $(arg model) -model adeept_rpi_pro"/>
  -->

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false"
  output="screen" args="-urdf -param robot_description -model adeept_rpi_pro"/>



    
  <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_key" output="screen" required="true" launch-prefix="xterm -e">
	    <!-- <remap from="cmd_vel" to="/adeept_rpi_pro/cmd_vel"/> -->
	</node>

  <!--launch rviz-->
  <!--<node name="rviz" pkg="rviz" type="rviz" args="-d $(find adeept_pro_tank_ros)/rviz/urdf.rviz"/>-->




</launch>
